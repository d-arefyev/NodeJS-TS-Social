import React, { useState } from "react";

// –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏
const emojis = [
  "üòÇ", "üòç", "üò¢", "üëè", "üî•", "ü•≥", "‚ù§Ô∏è", "ü§î", "üòò", "üéâ", "üòÜ", "üòä", "üòÅ",
  "üòé", "ü§ó", "üôå", "üëå", "üëç", "üí™", "ü•∞", "üòú", "ü§©", "ü§Ø", "ü•∫", "üòÖ", "ü§£",
  "üòã", "üòá", "ü§§", "üòà", "ü•¥", "üòè", "ü§ì", "üôÑ", "üò©", "ü§•", "üò¥", "üíÄ", "üëª",
  "üò≥", "üò§", "üò±", "üí©", "ü§°"
];

interface EmojiPickerProps {
  onEmojiClick: (emoji: string) => void; 
}

const EmojiPicker: React.FC<EmojiPickerProps> = ({ onEmojiClick }) => {
  return (
    <div className="flex w-full">
      {/* –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */}
      <div className="w-full grid grid-cols-10 gap-[4px]">
        {emojis.map((emoji, index) => (
          <div
            key={index}
            className="flex items-center justify-center text-xl cursor-pointer"
            onClick={() => onEmojiClick(emoji)} 
          >
            {emoji}
          </div>
        ))}
      </div>
    </div>
  );
};

export default EmojiPicker;





// import React, { useState } from "react";

// // –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏
// const emojis = [
//   "üòÇ", "üòç", "üò¢", "üëè", "üî•", "ü•≥", "‚ù§Ô∏è", "ü§î", "üòò", "üéâ", "üòÜ", "üòä", "üòÅ",
//   "üòé", "ü§ó", "üôå", "üëå", "üëç", "üí™", "ü•∞", "üòú", "ü§©", "ü§Ø", "ü•∫", "üòÖ", "ü§£",
//   "üòã", "üòá", "ü§§", "üòà", "ü•¥", "üòè", "ü§ì", "üôÑ", "üò©", "ü§•", "üò¥", "üíÄ", "üëª",
//   "üò≥", "üò§", "üò±", "üí©", "ü§°"
// ];

// const EmojiPicker = () => {
//   const [isOpen, setIsOpen] = useState(false);
//   const [selectedEmojis, setSelectedEmojis] = useState<string[]>([]);

//   // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–ø–∏—Å–∫–∞ —ç–º–æ–¥–∑–∏
//   const toggleEmojiList = () => {
//     setIsOpen(!isOpen);
//   };

//   // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —ç–º–æ–¥–∑–∏ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–≥–æ –≤ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ —ç–º–æ–¥–∑–∏
//   const handleEmojiClick = (emoji: string) => {
//     setSelectedEmojis([...selectedEmojis, emoji]); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –≤ –º–∞—Å—Å–∏–≤
//   };

//   return (
//     <div className="relative w-full">
//       {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ */}
//       <button
//         onClick={toggleEmojiList}
//         className="p-2 bg-transparent border-none cursor-pointer"
//       >
//         <img
//           src="/icons/smile.svg"  // –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É SVG-—Ñ–∞–π–ª—É
//           alt="Emoji Icon"
//           width={20}
//           height={20}
//         />
//       </button>

//       {/* –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏ –≤ —Å—Ç—Ä–æ–∫–∞—Ö */}
//       {isOpen && (
//         <div className="absolute left-0 mt-2 bg-white shadow-lg rounded-md w-full z-20 max-h-60 overflow-auto">
//           <div className="grid grid-cols-4 gap-2 p-2">
//             {emojis.map((emoji, index) => (
//               <div
//                 key={index}
//                 className="text-xl cursor-pointer hover:bg-gray-200 rounded p-1"
//                 onClick={() => handleEmojiClick(emoji)} // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –≤ –º–∞—Å—Å–∏–≤
//               >
//                 {emoji}
//               </div>
//             ))}
//           </div>
//         </div>
//       )}

//       {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–º–æ–¥–∑–∏ –≤–Ω—É—Ç—Ä–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –±–ª–æ–∫–∞ */}
//       <div className="flex flex-wrap mt-2">
//         {selectedEmojis.map((emoji, index) => (
//           <div key={index} className="text-xl p-1">
//             {emoji}
//           </div>
//         ))}
//       </div>
//     </div>
//   );
// };

// export default EmojiPicker;
